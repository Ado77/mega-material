import{a as o,b as t,c as e,d as n,f as i,e as s}from"./common.js";import"./icon.js";import"./ripple.js";let r=class extends o{constructor(){super(...arguments),this.on=!1,this.icon="",this.iconOn="",this.label="",this.disabled=!1}static get styles(){return[t`:host{display:inline-block}mwc-ripple{width:48px;height:48px}button{will-change:transform,opacity;width:48px;height:48px;padding:12px;font-size:24px;display:inline-block;position:relative;box-sizing:border-box;border:none;outline:0;background-color:transparent;fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none},::slotted(img) ::slotted(mwc-icon),::slotted(svg){width:24px;height:24px;display:inline-block}:host([on]) slot:not([name]){display:none}:host(:not([on])) slot[name]{display:none}:host:disabled{color:rgba(0,0,0,.38);color:var(--mdc-theme-text-disabled-on-light,rgba(0,0,0,.38));cursor:default;pointer-events:none}`]}render(){return e`<mwc-ripple unbounded><button aria-label=${this.label} aria-hidden=true aria-pressed=false><slot><mwc-icon>${this.icon}</mwc-icon></slot><slot name=on><mwc-icon>${this.iconOn}</mwc-icon></slot></button></mwc-ripple>`}};n([i({type:Boolean,reflect:!0})],r.prototype,"on",void 0),n([i({type:String})],r.prototype,"icon",void 0),n([i({type:String,attribute:"icon-on"})],r.prototype,"iconOn",void 0),n([i({type:String})],r.prototype,"label",void 0),n([i({type:Boolean,reflect:!0})],r.prototype,"disabled",void 0),r=n([s("mwc-icon-button")],r);export{r as IconButtonElement};
