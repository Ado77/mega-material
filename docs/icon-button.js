import{a as o,b as t,c as i,d as n,e,g as s,f as r}from"./common.js";import"./icon.js";import"./common2.js";import"./ripple.js";let c=class extends o{constructor(){super(...arguments),this.on=!1,this.icon="",this.iconOn="",this.label="",this.disabled=!1}static get styles(){return[t,i`:host{display:inline-flex;contain:content}mwc-ripple{width:var(--mdc-icon-button-size,48px);height:var(--mdc-icon-button-size,48px)}button{will-change:transform,opacity;width:100%;height:100%;padding:var(--mdc-icon-button-padding,12px);display:inline-block;position:relative;box-sizing:border-box;border:none;outline:0;background-color:transparent;fill:currentColor;color:inherit;text-decoration:none;cursor:pointer;user-select:none},::slotted(img) ::slotted(mwc-icon),::slotted(svg){width:var(--mdc-icon-size,24px);height:var(--mdc-icon-size,24px);display:inline-block}:host([on]) slot:not([name]){display:none}:host(:not([on])) slot[name]{display:none}:host:disabled{color:var(--mdc-theme-text-disabled-on-light,rgba(0,0,0,.38));cursor:default;pointer-events:none}`]}render(){return n`<mwc-ripple unbounded><button aria-label=${this.label} aria-hidden=true aria-pressed=false><slot><mwc-icon>${this.icon}</mwc-icon></slot><slot name=on><mwc-icon>${this.iconOn}</mwc-icon></slot></button></mwc-ripple>`}};e([s({type:Boolean,reflect:!0})],c.prototype,"on",void 0),e([s({type:String})],c.prototype,"icon",void 0),e([s({type:String,attribute:"icon-on"})],c.prototype,"iconOn",void 0),e([s({type:String})],c.prototype,"label",void 0),e([s({type:Boolean,reflect:!0})],c.prototype,"disabled",void 0),c=e([r("mwc-icon-button")],c);export{c as IconButtonElement};
